- content_for :form_errors, error_box(:object => @entity)

= form_for @entity, :html => {:class => "kor_form", :multipart => true}, :builder => Kor::FormBuilder do |f|
  
  = f.collection_selector :collection_id
  
  = f.hidden_field :kind_id
  = f.hidden_field :lock_version
  
  %div
    - if @entity.kind.requires_naming?
      - [ 'unknown', 'not_available', 'empty_name' ].each do |s|
        = f.radio_button(:no_name_statement, s, :class => "disable_entity_naming")
        = I18n.t('values.no_name_statements.' + s)

      = f.radio_button(:no_name_statement, 'enter_name', :class => "enable_entity_naming")
      = I18n.t('values.no_name_statements.enter_name')

      .hr

      = f.kor_input @entity.kind.name_label, :translate => false, :control => |
        f.text_field(:name, :disabled => @entity.no_name_statement != 'enter_name') |

      = f.kor_input @entity.kind.distinct_name_label, :attribute => :distinct_name, :translate => false
    
    = f.kor_input :subtype
    
  - if @entity.is_medium?
    = f.fields_for :medium, :builder => Kor::FormBuilder do |m|
      = f.kor_input :document, :control => m.file_field(:document)
      = f.kor_input :image, :control => m.file_field(:image)
      
  = (form_fields_for_entity_dataset(@entity) || "").html_safe
  
  - if @entity.kind.tagging && authorized?(:tagging, @entity.collection)
    = f.kor_input :tag_list, :control => f.text_field(:tag_list, 'kor-tagger' => true, value: @entity.tag_list.to_s)
    
  = f.kor_input :comment, :control => f.text_area(:comment)
  
  - if @entity.kind.can_have_synonyms?
    .hr
  
    = attachments 'synonyms', Entity.human_attribute_name(:synonyms), form_fields_for_entity_synonym do
      - @entity.synonyms.each do |s|
        = attachment form_fields_for_entity_synonym(s)
        
  .hr

  = attachments 'datings', EntityDating.model_name.human(:count => :other), form_fields_for_entity_dating do
    - @entity.datings.each do |ed|
      = attachment(form_fields_for_entity_dating(ed)).html_safe
    
  .hr
  
  = attachments 'properties', Entity.human_attribute_name(:properties), form_fields_for_entity_property do
    - @entity.properties.each do |p|
      = attachment form_fields_for_entity_property(p)

  .hr
  
  = f.kor_submit
