- content_for :title, I18n.t('nouns.user', :count => :other)
- content_for :commands, link_to(kor_command_image('plus'), new_user_path)
- content_for :content do
  .user_list
    .will_paginate_top
      = will_paginate @users, :previous_label => '«', :next_label => '»'
  
    = form_tag({:action => 'index'}, :method => :get) do
      = I18n.t('nouns.search').capitalize_first_letter
      %span.indented_once
        = text_field_tag :search_string

    .hr

    - if @users.empty?
      = I18n.t('objects.none_found', :o => I18n.t('nouns.user', :count => :other) )
    - else
      %table.kor_table
        %tr
          %th= User.human_attribute_name(:personal)
          %th= sort_link_to User.human_attribute_name('name'), 'name'
          %th= sort_link_to User.human_attribute_name('full_name'), 'full_name'
          %th= sort_link_to User.human_attribute_name('email'), 'email'
          %th= sort_link_to User.human_attribute_name('created_at'), 'created_at'
          %th= sort_link_to User.human_attribute_name('last_login'), 'last_login'
          %th= sort_link_to User.human_attribute_name('expires_at'), 'expires_at'

        - @users.each do |o|
          %tr{:id => "user_#{o.id}"}
            %td= I18n.t(o.personal? ? :yes : :no)
            %td= h(o.list_name)
            %td= h(o.full_name)
            %td= h(o.email).short
            %td= I18n.l(o.created_at) if o.created_at
            %td= I18n.l(o.last_login) if o.last_login
            %td= (o.expires_at ? I18n.l(o.expires_at) : I18n.t('never'))
            %td.nowrap
              = link_to kor_command_image('three_bars'), reset_login_attempts_user_path(o)
              = link_to kor_command_image('reset_password'), reset_password_user_path(o)
              = link_to kor_command_image('pen'), edit_user_path(o)
              = link_to kor_command_image('x'), user_path(o), :method => :delete, :data => {:confirm => I18n.t("confirm.delete_user")}
    
    .will_paginate_bottom
      =# will_paginate @entities, :renderer => Stdlib::KorWillPaginateRenderer, :previous_label => '«', :next_label => '»'
